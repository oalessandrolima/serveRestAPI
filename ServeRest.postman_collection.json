{
	"info": {
		"_postman_id": "7a00aa22-16c0-4ae6-b7fa-a11dac9f7fee",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33750028",
		"_collection_link": "https://martian-moon-427681.postman.co/workspace/API-Rest~88d0f081-b6d7-4a4d-b182-87c93c24cc33/collection/33750028-7a00aa22-16c0-4ae6-b7fa-a11dac9f7fee?action=share&source=collection_link&creator=33750028"
	},
	"item": [
		{
			"name": "geração de massa",
			"item": [
				{
					"name": "busca nova pessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//capturar nome, email e senha",
									"pm.globals.set(\"userName\", pm.response.json().results[0].name.first)",
									"pm.globals.set(\"userEmail\", pm.response.json().results[0].email)",
									"pm.globals.set(\"userPassword\", pm.response.json().results[0].login.password)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "usuários",
			"item": [
				{
					"name": "listar usuários cadastrados",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"quantidade\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"usuarios\": {",
									"      \"type\": \"array\",",
									"      \"items\": [",
									"        {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"nome\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"email\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"password\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"administrador\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"_id\": {",
									"              \"type\": \"string\"",
									"            }",
									"          },",
									"          \"required\": [",
									"            \"nome\",",
									"            \"email\",",
									"            \"password\",",
									"            \"administrador\",",
									"            \"_id\"",
									"          ]",
									"        }",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"quantidade\",",
									"    \"usuarios\"",
									"  ],",
									"  \"additionalProperties\": false",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Schema é valido', function () {",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastrar usuário",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"_id\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"message\",",
									"    \"_id\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Validar a mensagem de cadastro realizado com sucesso\", function () {",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Cadastro realizado com sucesso\")",
									"});",
									"",
									"pm.test(\"Capturar o id\", function() {",
									"    pm.globals.set(\"userId\", pm.response.json()._id)",
									"})",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"{{userName}}\",\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"administrador\": \"false\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "realizar login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"authorization\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"message\",",
									"    \"authorization\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validar a mensagem de login realizado com sucesso\", function () {",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Login realizado com sucesso\")",
									"});",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuário por id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"nome\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"email\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"password\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"administrador\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"_id\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"nome\",",
									"    \"email\",",
									"    \"password\",",
									"    \"administrador\",",
									"    \"_id\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})",
									"",
									"pm.test(\"Validar o id retornado\", function () {",
									"    pm.expect(pm.response.json()._id).to.be.eql(pm.globals.get('userId'))",
									"});",
									"",
									"pm.test(\"Validar o email retornado\", function() {",
									"    pm.expect(pm.response.json().email).to.be.eql(pm.globals.get('userEmail'))",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validar a mensagem de registro alterado com sucesso\", function () {",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro alterado com sucesso\")",
									"});",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"message\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nome\": \"{{userName}}\",\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuário atualizado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"nome\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"email\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"password\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"administrador\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"_id\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"nome\",",
									"    \"email\",",
									"    \"password\",",
									"    \"administrador\",",
									"    \"_id\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})",
									"",
									"pm.test(\"Validar usuário como administrador\", function () {",
									"    pm.expect(pm.response.json().administrador).to.be.eql(\"true\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "excluir usuário",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");",
									"",
									"pm.globals.set(\"schema\", {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"message\"",
									"  ]",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validar a mensagem registro excluído com sucesso\", function () {",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro excluído com sucesso\")",
									"});",
									"",
									"pm.test(\"Schema é válido\", function(){",
									"    const Ajv = require(\"ajv\")",
									"    const ajv = new Ajv({allErrors: true, verbose: true})",
									"\tpm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}